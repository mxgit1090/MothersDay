!function(){"use strict";var t=function(t){var r=Object.prototype.hasOwnProperty;function e(t,n){return Array.isArray(t)?function(t,r){for(var n,a="",i="",s=Array.isArray(r),c=0;c<t.length;c++)(n=e(t[c]))&&(s&&r[c]&&(n=o(n)),a=a+i+n,i=" ");return a}(t,n):t&&"object"==typeof t?function(t){var e="",n="";for(var a in t)a&&t[a]&&r.call(t,a)&&(e=e+n+a,n=" ");return e}(t):t||""}function n(t){if(!t)return"";if("object"==typeof t){var e="";for(var n in t)r.call(t,n)&&(e=e+n+":"+t[n]+";");return e}return t+""}function a(t,r,e,n){if(!1===r||null==r||!r&&("class"===t||"style"===t))return"";if(!0===r)return" "+(n?t:t+'="'+t+'"');var a=typeof r;return"object"!==a&&"function"!==a||"function"!=typeof r.toJSON||(r=r.toJSON()),"string"==typeof r||(r=JSON.stringify(r),e||-1===r.indexOf('"'))?(e&&(r=o(r))," "+t+'="'+r+'"'):" "+t+"='"+r.replace(/'/g,"&#39;")+"'"}t.merge=function t(r,e){if(1===arguments.length){for(var a=r[0],i=1;i<r.length;i++)a=t(a,r[i]);return a}for(var o in e)if("class"===o){var s=r[o]||[];r[o]=(Array.isArray(s)?s:[s]).concat(e[o]||[])}else if("style"===o){s=(s=n(r[o]))&&";"!==s[s.length-1]?s+";":s;var c=n(e[o]);c=c&&";"!==c[c.length-1]?c+";":c,r[o]=s+c}else r[o]=e[o];return r},t.classes=e,t.style=n,t.attr=a,t.attrs=function(t,i){var o="";for(var s in t)if(r.call(t,s)){var c=t[s];if("class"===s){c=e(c),o=a(s,c,!1,i)+o;continue}"style"===s&&(c=n(c)),o+=a(s,c,!1,i)}return o};var i=/["&<>]/;function o(t){var r=""+t,e=i.exec(r);if(!e)return t;var n,a,o,s="";for(n=e.index,a=0;n<r.length;n++){switch(r.charCodeAt(n)){case 34:o="&quot;";break;case 38:o="&amp;";break;case 60:o="&lt;";break;case 62:o="&gt;";break;default:continue}a!==n&&(s+=r.substring(a,n)),a=n+1,s+=o}return a!==n?s+r.substring(a,n):s}return t.escape=o,t.rethrow=function t(r,e,n,a){if(!(r instanceof Error))throw r;if(!("undefined"==typeof window&&e||a))throw r.message+=" on line "+n,r;try{a=a||require("fs").readFileSync(e,"utf8")}catch(e){t(r,null,n)}var i=3,o=a.split("\n"),s=Math.max(n-i,0),c=Math.min(o.length,n+i);i=o.slice(s,c).map((function(t,r){var e=r+s+1;return(e==n?"  > ":"    ")+e+"| "+t})).join("\n");throw r.path=e,r.message=(e||"Pug")+":"+n+"\n"+i+"\n\n"+r.message,r},t}({});if(document&&document.body){document.getElementById("main").innerHTML=function(r){var e,n="",a={};try{var i={};a.heart=e=function(){this&&this.block,this&&this.attributes;n+='<svg class="heart" viewbox="-12 -3 48 48" xmlns="http://www.w3.org/2000/svg">';for(var t=0;t<8;t++)n+='<path d="M12,21.5c-3.36-2.44-6.62-4.94-8.74-8.61a8,8,0,0,1-.9-6.73,5.29,5.29,0,0,1,8.94-1.95c.2.24.42.47.71.78l.52-.62a5.47,5.47,0,0,1,6-1.53A5.77,5.77,0,0,1,22,8a9.76,9.76,0,0,1-2.14,6.32A33.17,33.17,0,0,1,12,21.5"></path>';n+="</svg>"},n+='<svg class="container">';n+='<text x="50%" y="50%">',function(){if("number"==typeof"母親節快樂".length)for(var r=0,a="母親節快樂".length;r<a;r++){var i="母親節快樂"[r];n=(n+="<tspan>")+t.escape(null==(e=i)?"":e)+"</tspan>"}else{a=0;for(var r in"母親節快樂"){a++;i="母親節快樂"[r];n=(n+="<tspan>")+t.escape(null==(e=i)?"":e)+"</tspan>"}}}.call(this),n+="</text></svg>",n+='<div class="flowerfall">';for(var o=0;o<20;o++)a.heart();n+="</div>"}catch(r){t.rethrow(r,void 0,void 0,i[void 0])}return n}()}}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlcyI6WyIuLi9ub2RlX21vZHVsZXMvcm9sbHVwLXBsdWdpbi1wdWcvZGlzdC9ydW50aW1lLmVzLmpzIiwiLi4vc3JjL2luZGV4LmpzIiwiLi4vc3JjL3ZpZXdzL3RlbXBsYXRlLnB1ZyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24oZXhwb3J0cykge1xuICAndXNlIHN0cmljdCc7XG5cbiAgdmFyIHB1Z19oYXNfb3duX3Byb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxuICAvKipcbiAgICogTWVyZ2UgdHdvIGF0dHJpYnV0ZSBvYmplY3RzIGdpdmluZyBwcmVjZWRlbmNlXG4gICAqIHRvIHZhbHVlcyBpbiBvYmplY3QgYGJgLiBDbGFzc2VzIGFyZSBzcGVjaWFsLWNhc2VkXG4gICAqIGFsbG93aW5nIGZvciBhcnJheXMgYW5kIG1lcmdpbmcvam9pbmluZyBhcHByb3ByaWF0ZWx5XG4gICAqIHJlc3VsdGluZyBpbiBhIHN0cmluZy5cbiAgICpcbiAgICogQHBhcmFtIHtPYmplY3R9IGFcbiAgICogQHBhcmFtIHtPYmplY3R9IGJcbiAgICogQHJldHVybiB7T2JqZWN0fSBhXG4gICAqIEBhcGkgcHJpdmF0ZVxuICAgKi9cblxuICBleHBvcnRzLm1lcmdlID0gcHVnX21lcmdlO1xuICBmdW5jdGlvbiBwdWdfbWVyZ2UoYSwgYikge1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgICB2YXIgYXR0cnMgPSBhWzBdO1xuICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGF0dHJzID0gcHVnX21lcmdlKGF0dHJzLCBhW2ldKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBhdHRycztcbiAgICB9XG5cbiAgICBmb3IgKHZhciBrZXkgaW4gYikge1xuICAgICAgaWYgKGtleSA9PT0gJ2NsYXNzJykge1xuICAgICAgICB2YXIgdmFsQSA9IGFba2V5XSB8fCBbXTtcbiAgICAgICAgYVtrZXldID0gKEFycmF5LmlzQXJyYXkodmFsQSkgPyB2YWxBIDogW3ZhbEFdKS5jb25jYXQoYltrZXldIHx8IFtdKTtcbiAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSAnc3R5bGUnKSB7XG4gICAgICAgIHZhciB2YWxBID0gcHVnX3N0eWxlKGFba2V5XSk7XG4gICAgICAgIHZhbEEgPSB2YWxBICYmIHZhbEFbdmFsQS5sZW5ndGggLSAxXSAhPT0gJzsnID8gdmFsQSArICc7JyA6IHZhbEE7XG4gICAgICAgIHZhciB2YWxCID0gcHVnX3N0eWxlKGJba2V5XSk7XG4gICAgICAgIHZhbEIgPSB2YWxCICYmIHZhbEJbdmFsQi5sZW5ndGggLSAxXSAhPT0gJzsnID8gdmFsQiArICc7JyA6IHZhbEI7XG4gICAgICAgIGFba2V5XSA9IHZhbEEgKyB2YWxCO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYVtrZXldID0gYltrZXldO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBhO1xuICB9O1xuXG4gIC8qKlxuICAgKiBQcm9jZXNzIGFycmF5LCBvYmplY3QsIG9yIHN0cmluZyBhcyBhIHN0cmluZyBvZiBjbGFzc2VzIGRlbGltaXRlZCBieSBhIHNwYWNlLlxuICAgKlxuICAgKiBJZiBgdmFsYCBpcyBhbiBhcnJheSwgYWxsIG1lbWJlcnMgb2YgaXQgYW5kIGl0cyBzdWJhcnJheXMgYXJlIGNvdW50ZWQgYXNcbiAgICogY2xhc3Nlcy4gSWYgYGVzY2FwaW5nYCBpcyBhbiBhcnJheSwgdGhlbiB3aGV0aGVyIG9yIG5vdCB0aGUgaXRlbSBpbiBgdmFsYCBpc1xuICAgKiBlc2NhcGVkIGRlcGVuZHMgb24gdGhlIGNvcnJlc3BvbmRpbmcgaXRlbSBpbiBgZXNjYXBpbmdgLiBJZiBgZXNjYXBpbmdgIGlzXG4gICAqIG5vdCBhbiBhcnJheSwgbm8gZXNjYXBpbmcgaXMgZG9uZS5cbiAgICpcbiAgICogSWYgYHZhbGAgaXMgYW4gb2JqZWN0LCBhbGwgdGhlIGtleXMgd2hvc2UgdmFsdWUgaXMgdHJ1dGh5IGFyZSBjb3VudGVkIGFzXG4gICAqIGNsYXNzZXMuIE5vIGVzY2FwaW5nIGlzIGRvbmUuXG4gICAqXG4gICAqIElmIGB2YWxgIGlzIGEgc3RyaW5nLCBpdCBpcyBjb3VudGVkIGFzIGEgY2xhc3MuIE5vIGVzY2FwaW5nIGlzIGRvbmUuXG4gICAqXG4gICAqIEBwYXJhbSB7KEFycmF5LjxzdHJpbmc+fE9iamVjdC48c3RyaW5nLCBib29sZWFuPnxzdHJpbmcpfSB2YWxcbiAgICogQHBhcmFtIHs/QXJyYXkuPHN0cmluZz59IGVzY2FwaW5nXG4gICAqIEByZXR1cm4ge1N0cmluZ31cbiAgICovXG4gIGV4cG9ydHMuY2xhc3NlcyA9IHB1Z19jbGFzc2VzO1xuICBmdW5jdGlvbiBwdWdfY2xhc3Nlc19hcnJheSh2YWwsIGVzY2FwaW5nKSB7XG4gICAgdmFyIGNsYXNzU3RyaW5nID0gJycsIGNsYXNzTmFtZSwgcGFkZGluZyA9ICcnLCBlc2NhcGVFbmFibGVkID0gQXJyYXkuaXNBcnJheShlc2NhcGluZyk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB2YWwubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNsYXNzTmFtZSA9IHB1Z19jbGFzc2VzKHZhbFtpXSk7XG4gICAgICBpZiAoIWNsYXNzTmFtZSkgY29udGludWU7XG4gICAgICBlc2NhcGVFbmFibGVkICYmIGVzY2FwaW5nW2ldICYmIChjbGFzc05hbWUgPSBwdWdfZXNjYXBlKGNsYXNzTmFtZSkpO1xuICAgICAgY2xhc3NTdHJpbmcgPSBjbGFzc1N0cmluZyArIHBhZGRpbmcgKyBjbGFzc05hbWU7XG4gICAgICBwYWRkaW5nID0gJyAnO1xuICAgIH1cbiAgICByZXR1cm4gY2xhc3NTdHJpbmc7XG4gIH1cbiAgZnVuY3Rpb24gcHVnX2NsYXNzZXNfb2JqZWN0KHZhbCkge1xuICAgIHZhciBjbGFzc1N0cmluZyA9ICcnLCBwYWRkaW5nID0gJyc7XG4gICAgZm9yICh2YXIga2V5IGluIHZhbCkge1xuICAgICAgaWYgKGtleSAmJiB2YWxba2V5XSAmJiBwdWdfaGFzX293bl9wcm9wZXJ0eS5jYWxsKHZhbCwga2V5KSkge1xuICAgICAgICBjbGFzc1N0cmluZyA9IGNsYXNzU3RyaW5nICsgcGFkZGluZyArIGtleTtcbiAgICAgICAgcGFkZGluZyA9ICcgJztcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGNsYXNzU3RyaW5nO1xuICB9XG4gIGZ1bmN0aW9uIHB1Z19jbGFzc2VzKHZhbCwgZXNjYXBpbmcpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWwpKSB7XG4gICAgICByZXR1cm4gcHVnX2NsYXNzZXNfYXJyYXkodmFsLCBlc2NhcGluZyk7XG4gICAgfSBlbHNlIGlmICh2YWwgJiYgdHlwZW9mIHZhbCA9PT0gJ29iamVjdCcpIHtcbiAgICAgIHJldHVybiBwdWdfY2xhc3Nlc19vYmplY3QodmFsKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHZhbCB8fCAnJztcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQ29udmVydCBvYmplY3Qgb3Igc3RyaW5nIHRvIGEgc3RyaW5nIG9mIENTUyBzdHlsZXMgZGVsaW1pdGVkIGJ5IGEgc2VtaWNvbG9uLlxuICAgKlxuICAgKiBAcGFyYW0geyhPYmplY3QuPHN0cmluZywgc3RyaW5nPnxzdHJpbmcpfSB2YWxcbiAgICogQHJldHVybiB7U3RyaW5nfVxuICAgKi9cblxuICBleHBvcnRzLnN0eWxlID0gcHVnX3N0eWxlO1xuICBmdW5jdGlvbiBwdWdfc3R5bGUodmFsKSB7XG4gICAgaWYgKCF2YWwpIHJldHVybiAnJztcbiAgICBpZiAodHlwZW9mIHZhbCA9PT0gJ29iamVjdCcpIHtcbiAgICAgIHZhciBvdXQgPSAnJztcbiAgICAgIGZvciAodmFyIHN0eWxlIGluIHZhbCkge1xuICAgICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgICAgICBpZiAocHVnX2hhc19vd25fcHJvcGVydHkuY2FsbCh2YWwsIHN0eWxlKSkge1xuICAgICAgICAgIG91dCA9IG91dCArIHN0eWxlICsgJzonICsgdmFsW3N0eWxlXSArICc7JztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIG91dDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHZhbCArICcnO1xuICAgIH1cbiAgfTtcblxuICAvKipcbiAgICogUmVuZGVyIHRoZSBnaXZlbiBhdHRyaWJ1dGUuXG4gICAqXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBrZXlcbiAgICogQHBhcmFtIHtTdHJpbmd9IHZhbFxuICAgKiBAcGFyYW0ge0Jvb2xlYW59IGVzY2FwZWRcbiAgICogQHBhcmFtIHtCb29sZWFufSB0ZXJzZVxuICAgKiBAcmV0dXJuIHtTdHJpbmd9XG4gICAqL1xuICBleHBvcnRzLmF0dHIgPSBwdWdfYXR0cjtcbiAgZnVuY3Rpb24gcHVnX2F0dHIoa2V5LCB2YWwsIGVzY2FwZWQsIHRlcnNlKSB7XG4gICAgaWYgKHZhbCA9PT0gZmFsc2UgfHwgdmFsID09IG51bGwgfHwgIXZhbCAmJiAoa2V5ID09PSAnY2xhc3MnIHx8IGtleSA9PT0gJ3N0eWxlJykpIHtcbiAgICAgIHJldHVybiAnJztcbiAgICB9XG4gICAgaWYgKHZhbCA9PT0gdHJ1ZSkge1xuICAgICAgcmV0dXJuICcgJyArICh0ZXJzZSA/IGtleSA6IGtleSArICc9XCInICsga2V5ICsgJ1wiJyk7XG4gICAgfVxuICAgIHZhciB0eXBlID0gdHlwZW9mIHZhbDtcbiAgICBpZiAoKHR5cGUgPT09ICdvYmplY3QnIHx8IHR5cGUgPT09ICdmdW5jdGlvbicpICYmIHR5cGVvZiB2YWwudG9KU09OID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICB2YWwgPSB2YWwudG9KU09OKCk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdmFsICE9PSAnc3RyaW5nJykge1xuICAgICAgdmFsID0gSlNPTi5zdHJpbmdpZnkodmFsKTtcbiAgICAgIGlmICghZXNjYXBlZCAmJiB2YWwuaW5kZXhPZignXCInKSAhPT0gLTEpIHtcbiAgICAgICAgcmV0dXJuICcgJyArIGtleSArICc9XFwnJyArIHZhbC5yZXBsYWNlKC8nL2csICcmIzM5OycpICsgJ1xcJyc7XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChlc2NhcGVkKSB2YWwgPSBwdWdfZXNjYXBlKHZhbCk7XG4gICAgcmV0dXJuICcgJyArIGtleSArICc9XCInICsgdmFsICsgJ1wiJztcbiAgfTtcblxuICAvKipcbiAgICogUmVuZGVyIHRoZSBnaXZlbiBhdHRyaWJ1dGVzIG9iamVjdC5cbiAgICpcbiAgICogQHBhcmFtIHtPYmplY3R9IG9ialxuICAgKiBAcGFyYW0ge09iamVjdH0gdGVyc2Ugd2hldGhlciB0byB1c2UgSFRNTDUgdGVyc2UgYm9vbGVhbiBhdHRyaWJ1dGVzXG4gICAqIEByZXR1cm4ge1N0cmluZ31cbiAgICovXG4gIGV4cG9ydHMuYXR0cnMgPSBwdWdfYXR0cnM7XG4gIGZ1bmN0aW9uIHB1Z19hdHRycyhvYmosIHRlcnNlKXtcbiAgICB2YXIgYXR0cnMgPSAnJztcblxuICAgIGZvciAodmFyIGtleSBpbiBvYmopIHtcbiAgICAgIGlmIChwdWdfaGFzX293bl9wcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkge1xuICAgICAgICB2YXIgdmFsID0gb2JqW2tleV07XG5cbiAgICAgICAgaWYgKCdjbGFzcycgPT09IGtleSkge1xuICAgICAgICAgIHZhbCA9IHB1Z19jbGFzc2VzKHZhbCk7XG4gICAgICAgICAgYXR0cnMgPSBwdWdfYXR0cihrZXksIHZhbCwgZmFsc2UsIHRlcnNlKSArIGF0dHJzO1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICgnc3R5bGUnID09PSBrZXkpIHtcbiAgICAgICAgICB2YWwgPSBwdWdfc3R5bGUodmFsKTtcbiAgICAgICAgfVxuICAgICAgICBhdHRycyArPSBwdWdfYXR0cihrZXksIHZhbCwgZmFsc2UsIHRlcnNlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gYXR0cnM7XG4gIH07XG5cbiAgLyoqXG4gICAqIEVzY2FwZSB0aGUgZ2l2ZW4gc3RyaW5nIG9mIGBodG1sYC5cbiAgICpcbiAgICogQHBhcmFtIHtTdHJpbmd9IGh0bWxcbiAgICogQHJldHVybiB7U3RyaW5nfVxuICAgKiBAYXBpIHByaXZhdGVcbiAgICovXG5cbiAgdmFyIHB1Z19tYXRjaF9odG1sID0gL1tcIiY8Pl0vO1xuICBleHBvcnRzLmVzY2FwZSA9IHB1Z19lc2NhcGU7XG4gIGZ1bmN0aW9uIHB1Z19lc2NhcGUoX2h0bWwpe1xuICAgIHZhciBodG1sID0gJycgKyBfaHRtbDtcbiAgICB2YXIgcmVnZXhSZXN1bHQgPSBwdWdfbWF0Y2hfaHRtbC5leGVjKGh0bWwpO1xuICAgIGlmICghcmVnZXhSZXN1bHQpIHJldHVybiBfaHRtbDtcblxuICAgIHZhciByZXN1bHQgPSAnJztcbiAgICB2YXIgaSwgbGFzdEluZGV4LCBlc2NhcGU7XG4gICAgZm9yIChpID0gcmVnZXhSZXN1bHQuaW5kZXgsIGxhc3RJbmRleCA9IDA7IGkgPCBodG1sLmxlbmd0aDsgaSsrKSB7XG4gICAgICBzd2l0Y2ggKGh0bWwuY2hhckNvZGVBdChpKSkge1xuICAgICAgICBjYXNlIDM0OiBlc2NhcGUgPSAnJnF1b3Q7JzsgYnJlYWs7XG4gICAgICAgIGNhc2UgMzg6IGVzY2FwZSA9ICcmYW1wOyc7IGJyZWFrO1xuICAgICAgICBjYXNlIDYwOiBlc2NhcGUgPSAnJmx0Oyc7IGJyZWFrO1xuICAgICAgICBjYXNlIDYyOiBlc2NhcGUgPSAnJmd0Oyc7IGJyZWFrO1xuICAgICAgICBkZWZhdWx0OiBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmIChsYXN0SW5kZXggIT09IGkpIHJlc3VsdCArPSBodG1sLnN1YnN0cmluZyhsYXN0SW5kZXgsIGkpO1xuICAgICAgbGFzdEluZGV4ID0gaSArIDE7XG4gICAgICByZXN1bHQgKz0gZXNjYXBlO1xuICAgIH1cbiAgICBpZiAobGFzdEluZGV4ICE9PSBpKSByZXR1cm4gcmVzdWx0ICsgaHRtbC5zdWJzdHJpbmcobGFzdEluZGV4LCBpKTtcbiAgICBlbHNlIHJldHVybiByZXN1bHQ7XG4gIH07XG5cbiAgLyoqXG4gICAqIFJlLXRocm93IHRoZSBnaXZlbiBgZXJyYCBpbiBjb250ZXh0IHRvIHRoZVxuICAgKiB0aGUgcHVnIGluIGBmaWxlbmFtZWAgYXQgdGhlIGdpdmVuIGBsaW5lbm9gLlxuICAgKlxuICAgKiBAcGFyYW0ge0Vycm9yfSBlcnJcbiAgICogQHBhcmFtIHtTdHJpbmd9IGZpbGVuYW1lXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBsaW5lbm9cbiAgICogQHBhcmFtIHtTdHJpbmd9IHN0ciBvcmlnaW5hbCBzb3VyY2VcbiAgICogQGFwaSBwcml2YXRlXG4gICAqL1xuXG4gIGV4cG9ydHMucmV0aHJvdyA9IHB1Z19yZXRocm93O1xuICBmdW5jdGlvbiBwdWdfcmV0aHJvdyhlcnIsIGZpbGVuYW1lLCBsaW5lbm8sIHN0cil7XG4gICAgaWYgKCEoZXJyIGluc3RhbmNlb2YgRXJyb3IpKSB0aHJvdyBlcnI7XG4gICAgaWYgKCh0eXBlb2Ygd2luZG93ICE9ICd1bmRlZmluZWQnIHx8ICFmaWxlbmFtZSkgJiYgIXN0cikge1xuICAgICAgZXJyLm1lc3NhZ2UgKz0gJyBvbiBsaW5lICcgKyBsaW5lbm87XG4gICAgICB0aHJvdyBlcnI7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICBzdHIgPSBzdHIgfHwgcmVxdWlyZSgnZnMnKS5yZWFkRmlsZVN5bmMoZmlsZW5hbWUsICd1dGY4JylcbiAgICB9IGNhdGNoIChleCkge1xuICAgICAgcHVnX3JldGhyb3coZXJyLCBudWxsLCBsaW5lbm8pXG4gICAgfVxuICAgIHZhciBjb250ZXh0ID0gM1xuICAgICAgLCBsaW5lcyA9IHN0ci5zcGxpdCgnXFxuJylcbiAgICAgICwgc3RhcnQgPSBNYXRoLm1heChsaW5lbm8gLSBjb250ZXh0LCAwKVxuICAgICAgLCBlbmQgPSBNYXRoLm1pbihsaW5lcy5sZW5ndGgsIGxpbmVubyArIGNvbnRleHQpO1xuXG4gICAgLy8gRXJyb3IgY29udGV4dFxuICAgIHZhciBjb250ZXh0ID0gbGluZXMuc2xpY2Uoc3RhcnQsIGVuZCkubWFwKGZ1bmN0aW9uKGxpbmUsIGkpe1xuICAgICAgdmFyIGN1cnIgPSBpICsgc3RhcnQgKyAxO1xuICAgICAgcmV0dXJuIChjdXJyID09IGxpbmVubyA/ICcgID4gJyA6ICcgICAgJylcbiAgICAgICAgKyBjdXJyXG4gICAgICAgICsgJ3wgJ1xuICAgICAgICArIGxpbmU7XG4gICAgfSkuam9pbignXFxuJyk7XG5cbiAgICAvLyBBbHRlciBleGNlcHRpb24gbWVzc2FnZVxuICAgIGVyci5wYXRoID0gZmlsZW5hbWU7XG4gICAgZXJyLm1lc3NhZ2UgPSAoZmlsZW5hbWUgfHwgJ1B1ZycpICsgJzonICsgbGluZW5vXG4gICAgICArICdcXG4nICsgY29udGV4dCArICdcXG5cXG4nICsgZXJyLm1lc3NhZ2U7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuXG4gIHJldHVybiBleHBvcnRzXG59KSh7fSk7XG4iLCJpbXBvcnQgJy4vc3R5bGVzL2luZGV4LnNjc3MnO1xuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vdmlld3MvdGVtcGxhdGUucHVnJztcblxuaWYgKGRvY3VtZW50ICYmIGRvY3VtZW50LmJvZHkpIHtcbiAgY29uc3QgbWFpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYWluJyk7ICAgIFxuICBtYWluLmlubmVySFRNTCA9IHRlbXBsYXRlKCk7XG59XG4iLCJpbmNsdWRlIGhlYXJ0LnB1Z1xuXG5zdmcuY29udGFpbmVyXG4gIC0gdmFyIHRpdGxlID0gJ+avjeimquevgOW/q+aogic7XG4gIHRleHQoXG4gICAgeD1cIjUwJVwiXG4gICAgeT1cIjUwJVwiXG4gIClcbiAgICBlYWNoIGMgaW4gdGl0bGVcbiAgICAgIHRzcGFuPSBjXG5cbi5mbG93ZXJmYWxsXG4gIC0gZm9yICh2YXIgaSA9IDA7IGkgPCAyMDsgaSsrKVxuICAgICtoZWFydCgpXG5cbiJdLCJuYW1lcyI6WyJleHBvcnRzIiwicHVnX2hhc19vd25fcHJvcGVydHkiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInB1Z19jbGFzc2VzIiwidmFsIiwiZXNjYXBpbmciLCJBcnJheSIsImlzQXJyYXkiLCJjbGFzc05hbWUiLCJjbGFzc1N0cmluZyIsInBhZGRpbmciLCJlc2NhcGVFbmFibGVkIiwiaSIsImxlbmd0aCIsInB1Z19lc2NhcGUiLCJwdWdfY2xhc3Nlc19hcnJheSIsImtleSIsImNhbGwiLCJwdWdfY2xhc3Nlc19vYmplY3QiLCJwdWdfc3R5bGUiLCJvdXQiLCJzdHlsZSIsInB1Z19hdHRyIiwiZXNjYXBlZCIsInRlcnNlIiwidHlwZSIsInRvSlNPTiIsIkpTT04iLCJzdHJpbmdpZnkiLCJpbmRleE9mIiwicmVwbGFjZSIsIm1lcmdlIiwicHVnX21lcmdlIiwiYSIsImIiLCJhcmd1bWVudHMiLCJhdHRycyIsInZhbEEiLCJjb25jYXQiLCJ2YWxCIiwiY2xhc3NlcyIsImF0dHIiLCJvYmoiLCJwdWdfbWF0Y2hfaHRtbCIsIl9odG1sIiwiaHRtbCIsInJlZ2V4UmVzdWx0IiwiZXhlYyIsImxhc3RJbmRleCIsImVzY2FwZSIsInJlc3VsdCIsImluZGV4IiwiY2hhckNvZGVBdCIsInN1YnN0cmluZyIsInJldGhyb3ciLCJwdWdfcmV0aHJvdyIsImVyciIsImZpbGVuYW1lIiwibGluZW5vIiwic3RyIiwiRXJyb3IiLCJ3aW5kb3ciLCJtZXNzYWdlIiwicmVxdWlyZSIsInJlYWRGaWxlU3luYyIsImV4IiwiY29udGV4dCIsImxpbmVzIiwic3BsaXQiLCJzdGFydCIsIk1hdGgiLCJtYXgiLCJlbmQiLCJtaW4iLCJzbGljZSIsIm1hcCIsImxpbmUiLCJjdXJyIiwiam9pbiIsInBhdGgiLCJkb2N1bWVudCIsImJvZHkiLCJnZXRFbGVtZW50QnlJZCIsImlubmVySFRNTCIsInB1Z19taXhpbnMiLCJwdWdfaHRtbCIsInRlbXBsYXRlIl0sIm1hcHBpbmdzIjoiK0JBQWUsU0FBVUEsR0FHdkIsSUFBSUMsRUFBdUJDLE9BQU9DLFVBQVVDLGVBaUY1QyxT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
